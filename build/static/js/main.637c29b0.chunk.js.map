{"version":3,"sources":["logo.svg","components/Profit.js","components/Form.js","components/Transactions.js","components/InvesttTab.js","components/AppArea.js","App.js","reportWebVitals.js","index.js"],"names":["Profit","props","item","profit","parseInt","invested","returns","console","log","id","Form","valChange","event","target","value","setState","isNaN","comChange","comments","submitHandler","state","x","obj","func","preventDefault","type","this","onChange","placeholder","onClick","Component","Transactions","InvesttTab","transview","x1","addVal","vals","y","arr","Trans","push","deltrans","ev","nameList","i","length","v1","className","AppArea","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.637c29b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './ProfitStyle.css'\n\nfunction Profit(props) {\n    var profit=parseInt(props.invested)-parseInt(props.returns);\n    console.log({profit})\n    let item;\n    if(profit>0)\n    item=(\n        <p id=\"loss\">PENDING INVESTMENT<br/>{profit} &#8377;</p>\n    )\n    else \n    item=(\n        <p id=\"profit\">PROFIT<br/>{profit*-1} &#8377;</p>\n    )\n    return (\n        <div>\n            {item}\n        </div>\n    )\n}\n\nexport default Profit\n","import React, { Component } from 'react'\n\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             value:'',\n             comments:''\n        }\n        \n    }\n    \n    valChange=(event)=>\n    {\n        if(event.target.value==='')\n        this.setState({value:''});\n        else if(event.target.value==='-')\n        this.setState({value:'-'})\n        else if(!isNaN(event.target.value))\n        this.setState({value:parseInt(event.target.value)});\n        \n    }\n\n    comChange=(event)=>\n    {\n        this.setState({comments:event.target.value})\n    }\n\n    submitHandler=(event)=>{\n        if(!isNaN(this.state.value)){\n        let x=parseInt(this.state.value);\n        var obj={\n            value:x,\n            comments:this.state.comments\n        }\n        this.props.func(obj);\n        this.setState({value:''});\n        this.setState({comments:''});\n        console.log(x);}\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form>\n                <input \n                type=\"text\" \n                value={this.state.value} \n                onChange={this.valChange}\n                placeholder=\"TRANSACTION AMOUNT(&#8377;)\"\n                />\n                <br/>\n                <br/>\n                <input \n                type=\"text\" \n                value={this.state.comments} \n                onChange={this.comChange} \n                placeholder=\"COMMENTS\"\n                />\n                <br/><br/>\n                <button  onClick={this.submitHandler}>ADD</button>\n            </form>\n        )\n    }\n}\n\nexport default Form\n","import React from 'react'\nimport './TransStyle.css'\n\nfunction Transactions(props) {\n    \n    let nameList=[];\n    for(var i=props.arr.length-6;i<props.arr.length;i++)\n    {\n        if(props.arr[i].value>=0)\n        nameList.push(<p id=\"profit1\">{props.arr[i].value} {props.arr[i].comments}</p>)\n        else \n        nameList.push(<p id=\"loss1\">{props.arr[i].value*-1} {props.arr[i].comments}</p>)\n    }\n    return (\n        <div>\n            {nameList}\n        </div>\n    )\n}\n\nexport default Transactions\n","import React, { Component } from 'react'\nimport './InvestStyle.css';\nimport Profit from './Profit';\nimport Form from './Form';\nimport Transactions from './Transactions';\n\n\n\nexport class InvesttTab extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             invested:0,\n             returns:0,\n             Trans:[],\n             x:1\n        }\n        \n        \n    }\n    // Trans=[];\n    \n    transview=()=>\n    {\n        var x1=this.state.x;\n        x1+=1;\n        x1=x1%2;\n        this.setState({x:x1})\n        console.log('kefb')\n    }\n    addVal=(vals)=>\n    {\n        console.log(vals)\n        var x=parseInt(this.state.invested)-vals.value;\n        var y=parseInt(this.state.returns)+vals.value;\n        if(vals.value>=0)\n        {\n            this.setState(\n                {returns:y}\n            )\n        }\n        else \n        {\n            this.setState(\n                {invested:x}\n            )\n        }\n        var val1={\n            value:vals.value,\n            comments:vals.comments\n        }\n        var arr=this.state.Trans;\n        arr.push(vals);\n        console.log(arr);\n        this.setState({Trans:arr});\n        console.log(this.state.Trans[0].comments)\n        console.log(this.state.returns);\n        console.log(this.state.invested);\n        //this.render();\n    }\n\n    //const Lis=this.Trans.map((trans)=><p>{trans.value} for {trans.comments}</p>)\n\n    deltrans=(ev)=>\n    {\n        console.log(ev)\n    }\n    \n    render() {\n        var arr=this.state.Trans;\n        /*const nameList=arr.map((valu) => \n        \n        <p >{valu.value} {valu.comments}</p>\n        )*/\n\n        var nameList=[];\n        var i=arr.length-5;\n        if(i<0)\n        i=0;\n        for(i;i<arr.length;i++)\n        {\n            if(arr[i].value>=0)\n            nameList.push(<p id=\"profit1\">{arr[i].value} &#8377; -> {arr[i].comments}</p>)\n            else \n            nameList.push(<p id=\"loss1\">{arr[i].value*-1} &#8377; -> {arr[i].comments}</p>)\n        }\n        var v1=[];\n        for(i=0;i<arr.length;i++)\n        {\n            if(arr[i].value>=0)\n            v1.push(<p key={i}  id=\"profit1\">{arr[i].value} &#8377; -> {arr[i].comments}</p>)\n            else \n            v1.push(<p key= {i}  id=\"loss1\">{arr[i].value*-1} &#8377; -> {arr[i].comments}</p>)\n        }\n        \n        if(this.state.x===1)\n        return (\n            \n            <div className=\"transac\">\n                <div className=\"transac1\">\n                    <ul >\n                    \n                        <li id=\"return\">RETURNS <p id=\"r1\">{this.state.returns} &#8377;</p></li>\n                        <li id=\"invest\">INVESTED <p id=\"i1\">{this.state.invested} &#8377;</p></li> \n                \n                    </ul>\n                    <Profit invested={this.state.invested} returns={this.state.returns}/>\n                    \n                    <p>ADD TRANSACTION</p>\n                    <Form func={this.addVal}/>\n                    \n                    \n                </div>\n                <div id=\"xyz\">\n                    <h2 id=\"tr\">LAST 5 TRANSACTIONS</h2>\n                    \n                    {nameList}\n                </div>\n                <button id=\"btn\" onClick={this.transview}>VIEW ALL TRANSACTIONS</button>\n        </div>)\n        else \n        return (\n            <div>\n                {v1}\n                <button  onClick={this.transview}>GO BACK</button>\n            </div>\n        )\n    }\n}\n\nexport default InvesttTab\n\n\n","import React, { Component } from 'react'\nimport './BoxStyles.css';\nimport InvesttTab from './InvesttTab';\n\n\nclass AppArea extends Component {\n    render() {\n        return (\n            <div className=\"mainBox\" id=\"box1\">\n                \n                <InvesttTab invested=\"5000\" returns=\"2000\"/>\n                \n            </div>\n        )\n    }\n}\n\nexport default AppArea\n","import logo from './logo.svg';\nimport './App.css';\nimport './AppStyles.css';\nimport AppArea from './components/AppArea';\nimport Transactions from './components/Transactions';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <h1>EXPENSE TRACKER</h1>\n      <AppArea/>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}